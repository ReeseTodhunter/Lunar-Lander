#ifndef GAME_OBJECTS_H
#define GAME_OBJECTS_H

//includes
#include "Constants.h"

//STRUCTS
struct Player
{
	//Functions
	void Reset()
	{
		XPos = 5;
		YPos = 5;
		isAccelerating = false;
		Acceleration = 0.0f;
		hasLanded = false;
		hasCrashed = false;
		hasAddedScore = false;
	}

	void TotalReset()
	{
		Reset();
		fuel = 100;
		time = 0.0f;
		score = 0;
	}

	//Constants
	static const int WIDTH = 2;
	static const int HEIGHT = 3;
	static const int ROTATED_HEIGHT = 2;
	static const int ROTATED_WIDTH = 3;
	const char* CHARACTERS =
	{
		R"(/\)"
		R"(||)"
		R"(nn)"
	};
	const char* LEFT_CHARACTERS =
	{
		R"(/-<)"
		R"(\-<)"
	};
	const char* RIGHT_CHARACTERS =
	{
		R"(>-\)"
		R"(>-/)"
	};
	const int COLOURS[WIDTH * HEIGHT] =
	{
		0xf,0xf,
		0xf,0xf,
		0xE,0xE
	};
	const int LEFT_COLOURS[ROTATED_WIDTH * ROTATED_HEIGHT] =
	{
		0xf,0xf,0xE,
		0xf,0xf,0xE
		
	};
	const int RIGHT_COLOURS[ROTATED_WIDTH * ROTATED_HEIGHT] =
	{
		0xE,0xf,0xf,
		0xE,0xf,0xf
	};

	//Variables
	int XPos = 5;
	int YPos = 5;
	char direction = 'u';
	bool isAccelerating = false;
	float Acceleration = 0.0f;
	bool hasLanded = false;
	bool hasCrashed = false;
	bool hasAddedScore = false;
	float fuel = 100;
	float time = 0.0f;
	int score = 0;
};

struct Background
{
	//Constants
	const char* CHARACTERS = {
		R"(                                               *                                                                                                      )"//0
		R"(                                                                                        *                                                             )"//1
		R"(                *                                                                                                                            *        )"//2
		R"(                                                       *                                                            *                                 )"//3
		R"(                                       *                                                    *                                                         )"//4
		R"(   *                 *                                                 ___                                                             *              )"//5
		R"(                                                                      / 3X\____                                                                       )"//6
		R"(                                                          *          |      2X  \                   *                         *                       )"//7
		R"(                                   *                                /            \                                                                    )"//8
		R"(                                                                   |              \           ____            *                                       )"//9
		R"(                 *                                                 |               \      *  / 2X \                                *                  )"//
		R"(  *                                            *                   |                \       /      \                                                  )"//1
		R"(                                                                  /                  \_____/        \                                                 )"//2
		R"(                                                                 /                     6X            \                                                )"//3
		R"(                           *                                    /                                     \                   *                           )"//4
		R"(                                                               /                                       \                                              )"//5
		R"(         *                                    *               /                                         \                                 *           )"//6
		R"(  *                                                          /                                           \     *                                      )"//7
		R"(                                            ___             /                                             \                                           )"//8
		R"(                                           / 4X\           /                                               \              *                           )"//9
		R"(                    *                     /     \         /                                                 \                         *               )"//
		R"(                                         /       \       /                                                   \                                        )"//1
		R"(                                        /         \_____/                                                     \                                       )"//2
		R"(         *                             /            5X                                                         \           *                          )"//3
		R"(                              *       /                                                                         \                             *       )"//4
		R"(           *                         /                                                                           \_______                             )"//5
		R"(                           _________/                                                                               1X   \                            )"//6
		R"(                          /   1X                                                                                          \         *                 )"//7
		R"(                   *     /                                                                                                 \                          )"//8
		R"(                        /                                                                                                   \                  *      )"//9
		R"(                       /                                                                                                     \                        )"//
		R"(    *                 /                                                                                                       \                       )"//1
		R"(                     /                                                                                                         \        *             )"//2
		R"(         __         /                                                                                                           \                     )"//3
		R"(        /4X\       /                                                                                                             \_______________     )"//4
		R"(       /    \     /                                                                                                                     1X       \    )"//5
		R"(   ___/      \   /                                                                                                                                \   )"//6
		R"(  /3X         \_/                                                                                                                                  \  )"//7
		R"( /                                                                                                                                                  \ )"//8
		R"(/                                                                                                                                                    \)"//9
		// 0123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789
	};
	const char* POINTS = {
		R"(                                               *                                                                                                      )"//0
		R"(                                                                                        *                                                             )"//1
		R"(                *                                                                                                                            *        )"//2
		R"(                                                       *                                                            *                                 )"//3
		R"(                                       *                                                    *                                                         )"//4
		R"(   *                 *                                                 ___                                                             *              )"//5
		R"(                                                                      /333\_____                                                                      )"//6
		R"(                                                          *          |     22222\                   *                         *                       )"//7
		R"(                                   *                                /            \                                                                    )"//8
		R"(                                                                   |              \           ____            *                                       )"//9
		R"(                 *                                                 |               \      *  /2222\                                *                  )"//
		R"(  *                                            *                   |                \       /      \                                                  )"//1
		R"(                                                                  /                  \_____/        \                                                 )"//2
		R"(                                                                 /                    66666          \                                                )"//3
		R"(                           *                                    /                                     \                   *                           )"//4
		R"(                                                               /                                       \                                              )"//5
		R"(         *                                    *               /                                         \                                 *           )"//6
		R"(  *                                                          /                                           \     *                                      )"//7
		R"(                                            ___             /                                             \                                           )"//8
		R"(                                           /444\           /                                               \              *                           )"//9
		R"(                    *                     /     \         /                                                 \                         *               )"//
		R"(                                         /       \       /                                                   \                                        )"//1
		R"(                                        /         \_____/                                                     \                                       )"//2
		R"(         *                             /           55555                                                       \           *                          )"//3
		R"(                              *       /                                                                         \                             *       )"//4
		R"(           *                         /                                                                           \_______                             )"//5
		R"(                           _________/                                                                             1111111\                            )"//6
		R"(                          /111111111                                                                                      \         *                 )"//7
		R"(                   *     /                                                                                                 \                          )"//8
		R"(                        /                                                                                                   \                  *      )"//9
		R"(                       /                                                                                                     \                        )"//
		R"(    *                 /                                                                                                       \                       )"//1
		R"(                     /                                                                                                         \        *             )"//2
		R"(         __         /                                                                                                           \                     )"//3
		R"(        /44\       /                                                                                                             \_______________     )"//4
		R"(       /    \     /                                                                                                               111111111111111\    )"//5
		R"(   ___/      \   /                                                                                                                                \   )"//6
		R"(  /333        \_/                                                                                                                                  \  )"//7
		R"( /                                                                                                                                                  \ )"//8
		R"(/                                                                                                                                                    \)"//9
		// 0123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789
	};
};

struct Splash
{
	//Constants
	static const int WIDTH = 92;
	static const int HEIGHT = 15;
	const char* CHARACTERS = {
		// 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 12 | = 92 Width
		R"(//========================================================================================\\)"//1
		R"(||                                                                                        ||)"//2
		R"(||                  *       //       //    //  //||    //  //====//  //====//   *         ||)"//3
		R"(||           *             //       //    //  // ||   //  //    //  //    //              ||)"//4
		R"(||                        //       //    //  //  ||  //  //====//  //====//          *    ||)"//5
		R"(||                 *     //       //    //  //   || //  //    //  //\\                    ||)"//6
		R"(||     *                //=====  //====//  //    ||//  //    //  //  \\       *           ||)"//7
		R"(||                  =========================================================        *    ||)"//8
		R"(||            *    //       //====//  //||    //  //===\\    //====  //====//             ||)"//9
		R"(||                //       //    //  // ||   //  //    //   //      //    //    *         ||)"//10
		R"(||   *           //       //====//  //  ||  //  //     //  //===   //====//               ||)"//11
		R"(||         *    //       //    //  //   || //  //    //   //      //\\               *    ||)"//12
		R"(||             //=====  //    //  //    ||//  //===//    //====  //  \\    *              ||)"//13
		R"(||                                                                                        ||)"//14
		R"(\\========================================================================================//)"//15
	};
	const int COLOURS[WIDTH * HEIGHT] = {
		0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 2
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 3
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0x3,0x3,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 4
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 5
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0x3,0x3,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 6
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 7
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 8
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 9
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0x3,0x3,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 10
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 11
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0x3,0x3,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 12
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0xf,0xf,0x3,0x3,0x3,0x3,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0x3,0x3,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 13
		0x6,0x6,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x6,0x6,	// 14
		0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6
	};

	//Variables
	float Duration = 0.0f;

};

struct Explosion
{
	static const int WIDTH = 6;
	static const int HEIGHT = 5;

	const char* FIRST_CHARACTERS =
	{
		R"(      )"
		R"( \||/ )"
		R"( >XX< )"
		R"( /||\ )"
		R"(      )"
	};

	const char* SECOND_CHARACTERS =
	{
		R"( \XX/ )"
		R"(\vWWv/)"
		R"(>XXXX<)"
		R"(/^MM^\)"
		R"( /XX\ )"
	};

	const int FIRST_COLOURS[WIDTH * HEIGHT] =
	{
		0xC,0x6,0x6,0x6,0x6,0xC,
		0x6,0x6,0xC,0xC,0x6,0x6,
		0x6,0xC,0xC,0xC,0xC,0x6,
		0x6,0x6,0xC,0xC,0x6,0x6,
		0xC,0x6,0x6,0x6,0x6,0xC
	};
	const int SECOND_COLOURS[WIDTH * HEIGHT] =
	{
		0x6,0xC,0xC,0xC,0xC,0x6,
		0xC,0xC,0x6,0x6,0xC,0xC,
		0xC,0x6,0x6,0x6,0x6,0xC,
		0xC,0xC,0x6,0x6,0xC,0xC,
		0x6,0xC,0xC,0xC,0xC,0x6
	};
};

struct Thrust
{
	static const int WIDTH = 2;
	static const int HEIGHT = 2;
	static const int ROTATED_HEIGHT = 2;
	static const int ROTATED_WIDTH = 2;

	const char* CHARACTERS =
	{
		R"(XX)"
		R"(\/)"
	};
	const char* LEFT_CHARACTERS =
	{
		R"(X\)"
		R"(X/)"
	};
	const char* RIGHT_CHARACTERS =
	{
		R"(/X)"
		R"(\X)"
	};
	const int COLOURS[WIDTH * HEIGHT] =
	{
		0x6,0x6,
		0xC,0xC,
	};
	const int LEFT_COLOURS[ROTATED_WIDTH * ROTATED_HEIGHT] =
	{
		0x6,0xC,
		0x6,0xC,
	};
	const int RIGHT_COLOURS[ROTATED_WIDTH * ROTATED_HEIGHT] =
	{
		0xC,0x6,
		0xC,0x6,
	};
};

#endif // !GAME_OBJECTS_H
